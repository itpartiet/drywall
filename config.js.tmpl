'use strict';

exports.port = process.env.PORT || (process.env.NODE_ENV == 'test' ? 3001 : 3000);
exports.logging = {
  // Set this to true if you want extensive logging.
  debug: false,
  error: true
};
exports.companyName = 'Acme, Inc.';
exports.projectName = 'Drywall';
exports.systemEmail = 'your@email.addy';
exports.cryptoKey = 'k3yb0ardc4t';
exports.loginAttempts = {
  forIp: 50,
  forIpAndUser: 7,
  logExpiration: '20m'
};
exports.requireAccountVerification = false;
exports.smtp = {
  from: {
    name: process.env.SMTP_FROM_NAME || exports.projectName +' Website',
    address: process.env.SMTP_FROM_ADDRESS || 'your@email.addy'
  },
  credentials: {
    user: process.env.SMTP_USERNAME || 'your@email.addy',
    password: process.env.SMTP_PASSWORD || 'bl4rg!',
    host: process.env.SMTP_HOST || 'smtp.gmail.com',
    ssl: true
  }
};
exports.oauth = {
  twitter: {
    key: process.env.TWITTER_OAUTH_KEY || '',
    secret: process.env.TWITTER_OAUTH_SECRET || ''
  },
  facebook: {
    key: process.env.FACEBOOK_OAUTH_KEY || '',
    secret: process.env.FACEBOOK_OAUTH_SECRET || ''
  },
  github: {
    key: process.env.GITHUB_OAUTH_KEY || '',
    secret: process.env.GITHUB_OAUTH_SECRET || ''
  },
  google: {
    key: process.env.GOOGLE_OAUTH_KEY || '',
    secret: process.env.GOOGLE_OAUTH_SECRET || ''
  },
  tumblr: {
    key: process.env.TUMBLR_OAUTH_KEY || '',
    secret: process.env.TUMBLR_OAUTH_SECRET || ''
  }
};

exports.db = {
  development: {
    username: '<username>',
    password: '<password>',
    database: '<database>',
    host: '127.0.0.1',
    dialect: 'postgres',
    // Logging is turned on.
    logging: true,
    force: false
  },
  test: {
    username: '<username>',
    password: '<password>',
    // We recommend using another database for the tests,
    // since it can then be reset (forced) on every run
    // of the tests
    database: '<test-database>',
    host: '127.0.0.1',
    dialect: 'postgres',
    // Just turn logging on if a test fails and you believe
    // it's related to the database.
    logging: false,
    // Reset the test database on every run of the tests.
    force: true
  },
  production: {
    username: '<username>',
    password: '<password>',
    database: '<database>',
    host: '127.0.0.1',
    dialect: 'postgres',
    force : false
  }
}